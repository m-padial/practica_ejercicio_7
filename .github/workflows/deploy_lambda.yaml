name: Deploy Lambdas and api

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: mi-lambda-functions
  IMAGE_TAG_SCRAPER: scraper
  IMAGE_TAG_VOL: volatilidad
  IMAGE_TAG_DASH: dash
  DOCKERFILE_SCRAPER: Dockerfiles/Dockerfile_scaper
  DOCKERFILE_VOL: Dockerfiles/Dockerfile_volatilidad
  DOCKERFILE_DASH: Dockerfiles/Dockerfile_api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - run: terraform init
        working-directory: terraform

      - run: |
          terraform apply -auto-approve \
            -target=aws_ecr_repository.lambda_repository \
            -var="ecr_repo_name=${{ env.ECR_REPOSITORY }}"
        working-directory: terraform

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_SCRAPER }} -f ${{ env.DOCKERFILE_SCRAPER }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_SCRAPER }}

      - run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_VOL }} -f ${{ env.DOCKERFILE_VOL }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_VOL }}

    
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_API }} -f ${{ env.DOCKERFILE_API }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_API }}

      - run: |
          terraform apply -auto-approve \
            -var="ecr_repo_name=${{ env.ECR_REPOSITORY }}" \
            -var="image_tag_scraper=${{ env.IMAGE_TAG_SCRAPER }}" \
            -var="image_tag_vol=${{ env.IMAGE_TAG_VOL }}" \
            -var="image_tag_api=${{ env.IMAGE_TAG_API }}"
        working-directory: terraform
